definitions:
  model.Response:
    properties:
      data: {}
      error: {}
    type: object
  model.User:
    properties:
      created_at:
        type: string
      department:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
      user_status:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/status:
    get:
      consumes:
      - application/json
      description: Returns the status of the API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get the status of the API
      tags:
      - status
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: User created successfully
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
      summary: Create a new user
      tags:
      - user
  /api/v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: User deleted successfully
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
      summary: Delete a user by ID
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Returns a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User found
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
      summary: Get a user by ID
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Updates a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
      summary: Update a user by ID
      tags:
      - user
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Returns all users
      produces:
      - application/json
      responses:
        "200":
          description: Users found
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.User'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  type: string
              type: object
      summary: Get all users
      tags:
      - user
swagger: "2.0"
